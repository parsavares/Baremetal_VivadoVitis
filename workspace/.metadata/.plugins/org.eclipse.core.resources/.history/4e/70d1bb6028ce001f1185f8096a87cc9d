#include "xparameters.h"
#include "xil_printf.h"
#include "xgpio.h"
#include "xil_types.h"

// Get device IDs from xparameters.h
// #define BTN_ID XPAR_AXI_GPIO_BUTTONS_DEVICE_ID
// #define LED_ID XPAR_AXI_GPIO_LED_DEVICE_ID
#define BTN_CHANNEL 1
#define LED_CHANNEL 1
#define BTN_MASK 0b1111
#define LED_MASK 0b1111111111111111

int main() {
	XGpio_Config *cfg_ptr;
	XGpio led_device, btn_device;
	u32 data;

	xil_printf("Entered function main\r\n");

	// Initialize LED Device
	cfg_ptr = XGpio_LookupConfig(XPAR_AXI_GPIO_LED_BASEADDR);
	XGpio_CfgInitialize(&led_device, cfg_ptr, cfg_ptr->BaseAddress);

	// Initialize Button Device
	cfg_ptr = XGpio_LookupConfig(XPAR_AXI_GPIO_BUTTONS_BASEADDR);
	XGpio_CfgInitialize(&btn_device, cfg_ptr, cfg_ptr->BaseAddress);

	// Set Button Tristate
	XGpio_SetDataDirection(&btn_device, BTN_CHANNEL, BTN_MASK);

	// Set Led Tristate
	XGpio_SetDataDirection(&led_device, LED_CHANNEL, LED_MASK);

	while (1) {
		data = XGpio_DiscreteRead(&btn_device, BTN_CHANNEL);
		data &= BTN_MASK;
		if (data != 0) {
			data = LED_MASK;
		} else {
			data = 0;
		}
		XGpio_DiscreteWrite(&led_device, LED_CHANNEL, data);
	}
}


int main()
{

	XGpio_Config *cfg_ptr;

	XGpio swt_device;
	XGpio led_device;
	XGpio btn_device;

	u32 swt_data;
	u32 btn_data;
	u32 led_data;

	init_platform();
	xil_printf("Entered function main\r\n");

	// Initialize Switch
	cfg_ptr = XGpio_LookupConfig(SWT_BA);
	XGpio_CfgInitialize(&swt_device, cfg_ptr, cfg_ptr->BaseAddress);

	// Initialize Button
	cfg_ptr = XGpio_LookupConfig(BTN_BA);
	XGpio_CfgInitialize(&btn_device, cfg_ptr, cfg_ptr->BaseAddress);

	// Initialize LED
	cfg_ptr = XGpio_LookupConfig(LED_BA);
	XGpio_CfgInitialize(&led_device, cfg_ptr, cfg_ptr->BaseAddress);

	// Set data direction
	XGpio_SetDataDirection(&btn_device, 1, 0x0000000F); // 4-bit buttons
	XGpio_SetDataDirection(&led_device, 1, 0x0000FFFF); // 16-bit LEDs
	XGpio_SetDataDirection(&swt_device, 1, 0x0000FFFF); // 16-bit Switches

	while (1) {
		swt_data = XGpio_DiscreteRead(&swt_device, 1);
		btn_data = XGpio_DiscreteRead(&btn_device, 1);
		if(btn_data!=0){
			led_data = swt_data;
		}else{
			led_data = 0x00000000;
		}
		XGpio_DiscreteWrite(&led_device, 1, led_data);
	}

	cleanup_platform();
	return 0;
}
